---
import { useTranslations } from '@/i18n';
import LanguageToggle from './LanguageToggle.astro';
import ThemeToggle from './ThemeToggle.astro';
import Logo from './Logo.astro';
import MenuIcon from '../icons/MenuIcon.astro';
const { resolvedLanguage, t } = useTranslations(Astro.url);
---

<header
  class="fixed w-full top-0 z-10 bg-white/80 text-slate-700 shadow backdrop-blur-lg dark:bg-slate-800/75 dark:text-slate-300"
>
  <div class="container flex flex-wrap items-center py-3 font-medium md:flex-nowrap">
    <button class="h-10 [&>svg]:h-full [&>svg]:w-auto" id="nav-toggle" type="button">
      <Logo class="hidden fill-sky-900 dark:fill-slate-100 md:block" />
      <MenuIcon class="md:hidden p-1" id="menu-icon" />
    </button>
    <span class="ml-3 font-semibold font-lg hidden md:block">CliniCollect</span>
    <nav
      class="flex flex-col w-full order-last overflow-hidden transition-mh duration-300 md:order-none md:justify-end md:gap-3 md:flex-row"
      id="nav-dropdown"
    >
      <a class="p-2" href={`/${resolvedLanguage}/`}>
        {t('home.title')}
      </a>
      <a class="p-2" href={`/${resolvedLanguage}/blog`}>
        {t('blog.title')}
      </a>
    </nav>
    <div class="hidden h-8 mx-5 rounded-md w-[1px] dark:bg-slate-700 bg-slate-300 md:block"></div>
    <div class="flex gap-3 flex-grow justify-end">
      <ThemeToggle />
      <LanguageToggle />
    </div>
  </div>
</header>
<script>
  const toggle = document.getElementById('nav-toggle')!;
  const nav = document.getElementById('nav-dropdown')!;

  const handleToggleClick = () => {
    nav.style.maxHeight = nav.offsetHeight ? '0px' : `${nav.scrollHeight}px`;
  };

  const handleChangeMobile = () => {
    nav.style.maxHeight = '0px';
    toggle.addEventListener('click', handleToggleClick);
  };

  const handleChangeDesktop = () => {
    nav.style.maxHeight = 'none';
    toggle.removeEventListener('click', handleToggleClick);
  };

  const mobileQuery = window.matchMedia('(width < 768px)');

  if (mobileQuery.matches) {
    handleChangeMobile();
  }

  mobileQuery.addEventListener('change', ({ matches }) => {
    if (matches) {
      handleChangeMobile();
    } else {
      handleChangeDesktop();
    }
  });
</script>
