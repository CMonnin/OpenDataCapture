---
import { getCollection } from 'astro:content';
import { useTranslations } from '@/i18n';
import Page from '@/layouts/Page.astro';
import { getEntry } from 'astro:content';

export const getStaticPaths = () => {
  return [{ params: { locale: undefined } }, { params: { locale: 'fr' } }];
};

const { resolvedLanguage, t, translatePath } = useTranslations(Astro.url);

const posts = await getCollection('blog', ({ data }) => data.language === resolvedLanguage);
---

<Page meta={{ title: `${t('platform.title')} - ${t('blog.title')}` }}>
  <h2 class="pb-12 pt-8 text-center text-3xl font-extrabold tracking-tight sm:text-4xl">{t('blog.heading')}</h2>
  <div class="mt-12 grid gap-16 pt-12 lg:grid-cols-3 lg:gap-x-5 lg:gap-y-12">
    {
      posts.map(async (post) => {
        const author = await getEntry(post.data.author);
        return (
          <a
            class="cursor-pointer rounded-md border border-slate-300 bg-slate-50 p-5 shadow-sm dark:border-slate-600 dark:bg-slate-800"
            href={translatePath(`/blog/${post.slug}`)}
          >
            <span
              class:list={[
                'inline-flex items-center rounded-full px-3 py-0.5 text-sm font-medium',
                post.data.type === 'article' && 'bg-indigo-100 text-indigo-800',
                post.data.type === 'caseStudy' && 'bg-green-100 text-green-800',
                post.data.type === 'video' && 'bg-pink-100 text-pink-800'
              ]}
            >
              {t(`blog.${post.data.type}`)}
            </span>
            <div class="mt-4">
              <p class="text-xl font-semibold">{post.data.title}</p>
              <p class="mt-3 text-base text-slate-600 dark:text-slate-300">{post.data.description}</p>
            </div>
            <div class="mt-6 flex items-center">
              <div class="flex-shrink-0">
                <span class="sr-only">{author.data.fullName}</span>
                <img alt={author.data.fullName} class="h-10 w-10 rounded-full" src={author.data.image.src} />
              </div>
              <div class="ml-3">
                <p class="text-sm font-medium">{author.data.fullName}</p>
                <div class="flex space-x-1 text-sm text-slate-600 dark:text-slate-300">
                  <time datetime={post.data.datePublished.toISOString()}>
                    {post.data.datePublished.toLocaleDateString(resolvedLanguage, {
                      dateStyle: 'long'
                    })}
                  </time>
                  <span aria-hidden="true">&middot;</span>
                  <span>{post.data.estimatedReadingMinutes} min read</span>
                </div>
              </div>
            </div>
          </a>
        );
      })
    }
  </div>
</Page>
