---
import { getCollection } from 'astro:content';

import PageHeading from '@/components/common/PageHeading.astro';
import ChevronDownIcon from '@/components/icons/ChevronDownIcon.astro';
import { useTranslations } from '@/i18n';
import Page from '@/layouts/Page.astro';

const { resolvedLanguage, t } = useTranslations(Astro.url);

export const getStaticPaths = () => {
  return [{ params: { locale: 'en' } }, { params: { locale: 'fr' } }];
};

const faq = await getCollection('faq');
faq.sort((a, b) => {
  if (a.data.order > b.data.order) {
    return 1;
  } else if (b.data.order > a.data.order) {
    return -1;
  }
  return 0;
});
---

<Page bilingual>
  <PageHeading title={t('faq.heading')} />
  <div class="mx-auto max-w-screen-md">
    {
      faq.map(({ data: { entries, title } }) => (
        <div>
          <h3 class="my-4 font-semibold tracking-tight md:text-lg">{title[resolvedLanguage]}</h3>
          <ul class="accordion">
            {entries.map(({ answer, question }) => (
              <li class="accordion-item border-b">
                <button class="accordion-trigger flex w-full flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180">
                  {question[resolvedLanguage]}
                  <ChevronDownIcon class="text-muted-foreground accordion-trigger-icon h-4 w-4 shrink-0 rotate-90 transition-transform duration-200" />
                </button>
                <div class="accordion-content h-0 overflow-hidden text-sm">
                  <div class="text-muted-foreground pb-4">
                    {Array.isArray(answer[resolvedLanguage]) ? (
                      (answer[resolvedLanguage] as string[]).map((paragraph) => (
                        <p class="my-4 first:mt-0">{paragraph}</p>
                      ))
                    ) : (
                      <p>{answer[resolvedLanguage]}</p>
                    )}
                  </div>
                </div>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</Page>
<script>
  const items = document.querySelectorAll('.accordion > .accordion-item');
  items.forEach((item) => {
    const trigger = item.querySelector('.accordion-trigger') as HTMLButtonElement;
    const triggerIcon = trigger.querySelector('.accordion-trigger-icon ') as SVGElement;
    const content = item.querySelector('.accordion-content') as HTMLDivElement;
    trigger.addEventListener('click', () => {
      content.classList.toggle('h-0');
      triggerIcon.classList.toggle('rotate-90');
    });
  });
</script>
